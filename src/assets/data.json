{
  "glossary": [
    {"id": "1", "name": "Мобильное приложение", "description": "Мобильное приложение — это программное обеспечение, разработанное для работы на мобильных устройствах, таких как смартфоны и планшеты. Они обеспечивают пользователям удобный доступ к широкому спектру функций, включая электронную почту, медиа-плееры, GPS и другие утилиты. Мобильные приложения часто разрабатываются с учетом конкретных особенностей операционной системы устройства.", "x": -271, "y": -201},
    {"id": "2", "name": "Нативное приложение", "description": "Нативное приложение — это программное обеспечение, созданное специально для работы на определенной платформе или операционной системе, например, iOS или Android. Оно написано на языке программирования, поддерживаемом конкретной платформой, и может полностью использовать все возможности устройства, такие как камера, GPS, ускоренный графический процессор и т.д.", "x": -468, "y": -47},
    {"id": "3", "name": "Кроссплатформенное приложение", "description": "Кроссплатформенное приложение — это тип мобильного приложения, разработанного таким образом, чтобы быть совместимым с несколькими операционными системами. Такие приложения пишутся на универсальных языках программирования и фреймворках, что позволяет их запускать на различных устройствах без необходимости переписывания кода под каждую систему.", "x": -316, "y": 202},
    {"id": "4", "name": "JavaScript", "description": "JavaScript — это мощный язык программирования, используемый для создания интерактивных и динамических веб-страниц. В контексте мобильных приложений, JavaScript часто используется в сочетании с HTML и CSS для разработки кроссплатформенных и гибридных приложений. Этот язык позволяет разработчикам создавать сложные пользовательские интерфейсы и логику работы приложения.", "x": 34, "y": 78},
    {"id": "5", "name": "Фреймворк", "description": "Фреймворк в контексте разработки программного обеспечения — это набор инструментов, библиотек и руководств, которые облегчают процесс разработки. Он предоставляет стандартизированную основу для разработки и структурирования программного кода, что существенно ускоряет и упрощает разработку сложных приложений.", "x": 292, "y": 93},
    {"id": "6", "name": "React Native", "description": "React Native — это популярный фреймворк, созданный Facebook для разработки нативных мобильных приложений, используя JavaScript. Он позволяет разработчикам использовать React, библиотеку для построения пользовательских интерфейсов, в сочетании с нативными платформенными возможностями, что обеспечивает высокую производительность и естественное чувство приложения.", "x": 550, "y": 79},
    {"id": "7", "name": "NativeScript", "description": "NativeScript — это фреймворк для создания нативных мобильных приложений на JavaScript. Он позволяет разработчикам писать код на JavaScript, который затем преобразуется в нативный код, обеспечивая доступ к нативным API и возможностям устройства, таким как камера, микрофон и уведомления.", "x": 73, "y": 229},
    {"id": "8", "name": "Ionic", "description": "Ionic — это фреймворк для разработки гибридных мобильных приложений. Он позволяет использовать веб-технологии, такие как HTML, CSS и JavaScript, для создания приложений, которые могут быть установлены как нативные приложения на различных платформах. Ionic обеспечивает богатый набор готовых к использованию компонентов интерфейса и интеграцию с различными платформенными возможностями.", "x": 254, "y": -91},
    {"id": "9", "name": "Нативные функции", "description": "Нативные функции относятся к специфическим возможностям и функциям, предоставляемым операционной системой мобильного устройства. Это включает в себя доступ к аппаратным компонентам, таким как камера, GPS, датчики движения, а также использование нативных возможностей для улучшения производительности и пользовательского опыта.", "x": -521, "y": -189},
    {"id": "10", "name": "Платформа", "description": "В контексте мобильных приложений платформа обозначает операционную систему, на которой работает мобильное устройство, например, Android или iOS. От выбора платформы зависит не только выбор инструментов для разработки, но и доступные API, пользовательский опыт и функциональность приложения.", "x": -601, "y": 65},
    {"id": "11", "name": "Гибридное приложение", "description": "Гибридное приложение — это тип мобильного приложения, сочетающий в себе элементы нативных и веб-технологий. Оно часто разрабатывается с использованием HTML, CSS и JavaScript и упаковывается в нативный контейнер, что позволяет ему работать на различных платформах и иметь доступ к нативным функциям устройства.", "x": -134, "y": -53},
    {"id": "12", "name": "WebView", "description": "WebView — это компонент, который позволяет в мобильных приложениях отображать веб-страницы и веб-контент. Он действует как браузер внутри приложения, позволяя ему загружать и отображать веб-контент. Это особенно полезно в гибридных приложениях, где большая часть контента поставляется в форме веб-страниц.", "x": 32, "y": -204},
    {"id": "14", "name": "JavaScript bridge", "description": "JavaScript bridge в контексте мобильных приложений относится к механизму, который позволяет JavaScript взаимодействовать с нативным кодом приложения. Это ключевой компонент в гибридных и кроссплатформенных приложениях, так как он обеспечивает возможность использования нативных функций устройства прямо из JavaScript.", "x": -681, "y": -446},
    {"id": "15", "name": "API устройства", "description": "API (Application Programming Interface) устройства — это набор функций и процедур, который позволяет мобильным приложениям взаимодействовать с операционной системой и другим программным обеспечением на устройстве. Эти интерфейсы обеспечивают доступ к таким функциям, как камера, геолокация, датчики движения и многому другому.", "x": -629, "y": -306},
    {"id": "16", "name": "Angular", "description": "Angular — это мощный фреймворк, разработанный Google для создания веб-приложений. Он часто используется в сочетании с Ionic для разработки гибридных мобильных приложений. Angular обеспечивает эффективное управление данными и интерфейсом пользователя, а также поддерживает различные инструменты и библиотеки для повышения производительности разработки.", "x": 267, "y": -275},
    {"id": "17", "name": "TypeScript", "description": "TypeScript — это язык программирования, разработанный Microsoft, который расширяет JavaScript, добавляя строгую типизацию и объектно-ориентированные возможности. Он часто используется в современной веб-разработке, включая фреймворки, такие как Angular и Ionic, для повышения читаемости кода, улучшения поддержки и облегчения масштабирования проектов.", "x": 307, "y": -402}
  ],
  "semanticGraph": [
    { "source": "1", "target": "2", "type": "Включает" },
    { "source": "1", "target": "3", "type": "Включает" },
    { "source": "3", "target": "4", "type": "Использует" },
    { "source": "4", "target": "5", "type": "Использует" },
    { "source": "5", "target": "6", "type": "Пример" },
    { "source": "5", "target": "7", "type": "Пример" },
    { "source": "5", "target": "8", "type": "Пример" },
    { "source": "2", "target": "9", "type": "Использует" },
    { "source": "2", "target": "10", "type": "Требует" },
    { "source": "3", "target": "11", "type": "Пример" },
    { "source": "11", "target": "12", "type": "Использует" },
    { "source": "15", "target": "14", "type": "Вызывает" },
    { "source": "9", "target": "15", "type": "Использует" },
    { "source": "8", "target": "16", "type": "Интегрирует" },
    { "source": "16", "target": "17", "type": "Использует" },
    { "source": "8", "target": "12", "type": "Использует" }
  ]
}
