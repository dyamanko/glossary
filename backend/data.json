{
  "glossary": [
    {
      "id": "1",
      "name": "Мобильное приложение",
      "description": "Мобильное приложение — это специализированное программное обеспечение, разработанное для мобильных устройств, таких как смартфоны и планшеты. Они обеспечивают удобный доступ к разнообразным функциональным возможностям и сервисам, включая общение, навигацию, развлечения и профессиональные инструменты. Мобильные приложения разрабатываются с учетом пользовательского интерфейса и функциональности операционных систем, на которых они работают.",
      "x": -271,
      "y": -201
    },
    {
      "id": "2",
      "name": "Нативное приложение",
      "description": "Нативное приложение — это приложение, разработанное специально для конкретной операционной системы или платформы, такой как iOS или Android, с использованием языков программирования и инструментов, специфичных для этой платформы. Это позволяет приложениям полноценно использовать функциональные возможности устройства и обеспечивать оптимальную производительность и качество пользовательского опыта.",
      "x": -468,
      "y": -47
    },
    {
      "id": "3",
      "name": "Кроссплатформенное приложение",
      "description": "Кроссплатформенное приложение — это мобильное приложение, разработанное для работы на нескольких операционных системах с использованием единой кодовой базы. Это достигается за счет использования универсальных языков программирования и фреймворков, что позволяет одному и тому же приложению запускаться на разных устройствах, уменьшая тем самым время и затраты на разработку.",
      "x": -316,
      "y": 202
    },
    {
      "id": "4",
      "name": "JavaScript",
      "description": "JavaScript — это универсальный и гибкий язык программирования, широко используемый в разработке веб-страниц для создания интерактивных и динамических элементов. В контексте мобильных приложений JavaScript применяется в создании кроссплатформенных и гибридных приложений, позволяя разработчикам создавать сложные интерфейсы и функциональность, а также обеспечивая совместимость с различными платформами и устройствами.",
      "x": 14,
      "y": 30
    },
    {
      "id": "5",
      "name": "Фреймворк",
      "description": "Фреймворк в контексте разработки программного обеспечения представляет собой комплексный набор инструментов, библиотек и методологий, которые предоставляют стандартизированный подход к разработке. Фреймворки упрощают создание и структурирование кода, обеспечивая более быструю и эффективную разработку программного обеспечения, в том числе мобильных приложений.",
      "x": 292,
      "y": 93
    },
    {
      "id": "6",
      "name": "React Native",
      "description": "React Native — это инновационный фреймворк от Facebook, предназначенный для разработки нативных мобильных приложений на JavaScript. Этот фреймворк позволяет использовать React для построения пользовательских интерфейсов, а также интегрировать нативные возможности платформы, предоставляя превосходную производительность и интуитивно понятный пользовательский интерфейс.",
      "x": 550,
      "y": 79
    },
    {
      "id": "7",
      "name": "NativeScript",
      "description": "NativeScript — это мощный фреймворк для создания нативных мобильных приложений, использующий JavaScript. Он позволяет разработчикам писать код на JavaScript, который затем преобразуется в нативный код для каждой платформы, обеспечивая эффективное использование нативных API и возможностей устройства.",
      "x": 73,
      "y": 229
    },
    {
      "id": "8",
      "name": "Ionic",
      "description": "Ionic — это фреймворк, предназначенный для разработки гибридных мобильных приложений. Он интегрирует веб-технологии, такие как HTML, CSS и JavaScript, для создания приложений, которые могут быть установлены и работать как нативные приложения на различных платформах. Ionic предлагает готовые к использованию компоненты интерфейса и обширные возможности интеграции с различными платформенными API.",
      "x": 254,
      "y": -91
    },
    {
      "id": "9",
      "name": "Нативные функции",
      "description": "Нативные функции — это специализированные возможности и функции, предоставляемые операционной системой мобильного устройства, такие как доступ к аппаратным ресурсам (камера, GPS, датчики движения) и оптимизированные решения для повышения производительности и улучшения пользовательского опыта приложений.","x": -521,"y": -189
    },
    {
      "id": "10",
      "name": "Платформа",
      "description": "Платформа в мобильной разработке означает операционную систему устройства, такую как Android или iOS. Выбор платформы определяет доступные инструменты разработки, API, а также функциональные возможности и ограничения приложения, влияя на пользовательский опыт и качество работы приложения.",
      "x": -601,
      "y": 65
    },
    {
      "id": "11",
      "name": "Гибридное приложение",
      "description": "Гибридное приложение сочетает в себе элементы нативных и веб-технологий, используя HTML, CSS и JavaScript для разработки, и упаковывается в нативный контейнер для работы на различных платформах. Такое приложение может иметь доступ к нативным функциям устройства, при этом сохраняя универсальность веб-разработки.",
      "x": -134,
      "y": -53
    },
    {
      "id": "12",
      "name": "WebView",
      "description": "WebView — это компонент мобильного приложения, который позволяет внедрять и отображать веб-контент внутри приложения, действуя как встроенный браузер. Этот компонент особенно важен в гибридных приложениях для интеграции веб-страниц и веб-сервисов в нативное мобильное приложение.",
      "x": 32,
      "y": -204
    },
    {
      "id": "14",
      "name": "JavaScript bridge",
      "description": "JavaScript bridge — это механизм в мобильных приложениях, позволяющий коду JavaScript взаимодействовать с нативным кодом. Этот механизм является ключевым в гибридных и кроссплатформенных приложениях, обеспечивая доступ к нативным функциям устройства и интеграцию между веб-компонентами и нативной платформой.",
      "x": -681,
      "y": -446
    },
    {
      "id": "15",
      "name": "API устройства",
      "description": "API устройства представляют собой программные интерфейсы, предоставляющие мобильным приложениям доступ к функциям и возможностям операционной системы и оборудования устройства. Это включает в себя такие функции, как доступ к камере, геолокационные сервисы, датчики движения, обеспечивая более широкий спектр возможностей для приложений.",
      "x": -629,
      "y": -306
    },
    {
      "id": "16",
      "name": "Angular",
      "description": "Angular — это передовой фреймворк от Google для разработки динамичных и масштабируемых веб-приложений. Он предоставляет разработчикам мощные инструменты для управления состоянием, данных и пользовательским интерфейсом, и часто используется в сочетании с Ionic для создания гибридных мобильных приложений.",
      "x": 267,
      "y": -275
    },
    {
      "id": "17",
      "name": "TypeScript",
      "description": "TypeScript — это язык программирования от Microsoft, расширяющий возможности JavaScript за счет строгой типизации и объектно-ориентированных особенностей. Применяется в современных веб- и мобильных проектах для улучшения структуры кода, облегчения разработки и поддержки крупных приложений, особенно в сочетании с Angular и Ionic.",
      "x": 307,
      "y": -402
    }
  ],
  "semanticGraph": [
    {
      "source": "1",
      "target": "2",
      "type": "Включает"
    },
    {
      "source": "1",
      "target": "3",
      "type": "Включает"
    },
    {
      "source": "3",
      "target": "4",
      "type": "Использует"
    },
    {
      "source": "4",
      "target": "5",
      "type": "Использует"
    },
    {
      "source": "5",
      "target": "6",
      "type": "Пример"
    },
    {
      "source": "5",
      "target": "7",
      "type": "Пример"
    },
    {
      "source": "5",
      "target": "8",
      "type": "Пример"
    },
    {
      "source": "2",
      "target": "9",
      "type": "Использует"
    },
    {
      "source": "2",
      "target": "10",
      "type": "Требует"
    },
    {
      "source": "3",
      "target": "11",
      "type": "Пример"
    },
    {
      "source": "11",
      "target": "12",
      "type": "Использует"
    },
    {
      "source": "15",
      "target": "14",
      "type": "Вызывает"
    },
    {
      "source": "9",
      "target": "15",
      "type": "Использует"
    },
    {
      "source": "8",
      "target": "16",
      "type": "Интегрирует"
    },
    {
      "source": "16",
      "target": "17",
      "type": "Использует"
    },
    {
      "source": "8",
      "target": "12",
      "type": "Использует"
    }
  ]
}
